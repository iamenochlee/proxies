/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ProxyAssigned,
  ProxyAssignedInterface,
} from "../../ProxyAssigned.sol/ProxyAssigned";

const _abi = [
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_impl",
        type: "address",
      },
    ],
    name: "changeImplementaion",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102fa806100206000396000f3fe608060405234801561001057600080fd5b506004361061002f5760003560e01c80635e4e0f73146100f657610030565b5b600061005b7f227443dab4e98d5ea0e2b5b3e547f1cf48e750b6c765ad3b02feec6b3385d48c610126565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000366040516100a69291906101e5565b600060405180830381855af49150503d80600081146100e1576040519150601f19603f3d011682016040523d82523d6000602084013e6100e6565b606091505b50509050806100f457600080fd5b005b610110600480360381019061010b9190610261565b610130565b60405161011d91906102a9565b60405180910390f35b6000819050919050565b60008161015c7f227443dab4e98d5ea0e2b5b3e547f1cf48e750b6c765ad3b02feec6b3385d48c610126565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600081905092915050565b82818337600083830152505050565b60006101cc83856101a6565b93506101d98385846101b1565b82840190509392505050565b60006101f28284866101c0565b91508190509392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061022e82610203565b9050919050565b61023e81610223565b811461024957600080fd5b50565b60008135905061025b81610235565b92915050565b600060208284031215610277576102766101fe565b5b60006102858482850161024c565b91505092915050565b60008115159050919050565b6102a38161028e565b82525050565b60006020820190506102be600083018461029a565b9291505056fea2646970667358221220db57725a84c71aca69ff0fbd555e98234ea02e4437bcfc1a62ba308e05323a0564736f6c63430008110033";

type ProxyAssignedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyAssignedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyAssigned__factory extends ContractFactory {
  constructor(...args: ProxyAssignedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProxyAssigned> {
    return super.deploy(overrides || {}) as Promise<ProxyAssigned>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProxyAssigned {
    return super.attach(address) as ProxyAssigned;
  }
  override connect(signer: Signer): ProxyAssigned__factory {
    return super.connect(signer) as ProxyAssigned__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyAssignedInterface {
    return new utils.Interface(_abi) as ProxyAssignedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyAssigned {
    return new Contract(address, _abi, signerOrProvider) as ProxyAssigned;
  }
}
